/*
  주소 : 메모리 공간은 8bit인 1byte마다 고유한 address존재 /   메모리 주소는 0부터 바이트마다 1씩 증가함.
  메모리 주소는 저장 장소인 변수 이름과 함꼐 기억 장소를 참조하는 다른 방법 중 하나!
  
  & [주소연산자, ampersand] : 이가 피연산자인 변수의 메모리 주소를 반환하는 주소연산자 | &aa -> 변수 aa의 주소값을 반환. 실제 주소값은 4바이트 크기의 양의 정수
  
  포인터 변수 : 변수가 저장되는 곳의 주소값을 저장하는 변수 / 변수의 주소값은 반드시 포인터 변수에 저장해야 의미 있다. 
  | 선언방법 : 포인터 변수 선언에서 자료형과 표인터 변수 이름 사이에 연산자 *를 삽입하여 선언(int *P -> int포인터 P / 변수 P는 정수 int를 저장하는 일반ㄴ변수의 주소를 저장하는 포인터 변수
*/
